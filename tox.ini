# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
env_list = lint, unit

[vars]
application = opensearch_dashboards 
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals =
    /bin/bash
    poetry
set_env =
    PYTHONPATH = {[vars]src_path}:{tox_root}/lib
    PY_COLORS = 1
pass_env =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    poetry lock
    poetry install --only fmt
commands =
    ; poetry config warnings.export false
    poetry run isort {[vars]all_path}
    ; poetry export -f requirements.txt -o requirements.txt --without-hashes

    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands_pre =
    poetry install --only lint
commands =
    poetry check --lock
    ; -S condition to be removed after https://github.com/canonical/opensearch-operator/pull/216 is merged
    poetry run codespell {[vars]all_path} -S *opensearch-operator*
    poetry run black --check --diff {[vars]all_path}

    poetry run pyright

[testenv:unit]
description = Run unit tests
commands_pre =
    poetry install --only main,charm-libs,unit
commands =
    poetry run coverage run --source={[vars]src_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report

[testenv:integration]
description = Run all integration tests
pass_env =
    CI
    GITHUB_OUTPUT
allowlist_externals =
    {[testenv]allowlist_externals}
commands_pre =
    poetry install --only integration
commands =
    poetry run pytest -vv --tb native --log-cli-level=INFO --ignore={[vars]tests_path}/unit/ {posargs}
